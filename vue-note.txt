Vue
===
MVVM架構

#Model
>data

#View Model
>Vue實例

#View
>DOM
===
透過view（dom）的event來控制，來影響View Model
view model 接收操作之後修改model資料的內容
變更之後再透過 view model 再去修改dom的資料內容

===
Vue學習分三塊

Vue模板

Vue實例

Vue組件

===
命令式的寫法：jQuery 
一個指令一個動作，直到達成目標

聲明式的寫法：主流框架React , Vue , Angular
給一個目標．程式會自動執行目標

===
vue 語法學習列表
---------------
v-if
//判斷式子
v-else
// v-else 一定要接在v-if元素之後

v-for
//迴圈式子
// item in {自定義的data} 
// 什麼 in 什麼

// 進階用法 
// 如果想加入索引數字
// 可在v-for加入小括號（month , {自定義名稱}）為索引數字
// 如果要從某個數值開始，直接在:value 加入算數

// 細節處理
// 


v-on
縮寫>>>> @click
//觸發function(或是監聽事件用的)

v-bind
縮寫>>>> :checked
//綁定屬性專用的式子 ex:checked="true"
// v-bind 綁定屬性也可以是陣列
// 例如 btnclass:['submit','disabled']


===
vue 實例 instance
// 類別 class
const vm = new Vue({

})

// 掛載 mount 
###只會掛載到第一個元素
const vm = new Vue({
  el: '#app', <<< 掛載選擇
  data: {
    msg:'hello',
  },
});
or
vm.$mount('#app');

// 模板 template
// 會忽略html裡面的元素，將直接塞入vue template裡面的值
html
  <div id="#app"></div>

const vm = new Vue({
  el: 'app',
  template:"<div><h2>{{msg}}</h2></div>",
  data:{
    msg:'hello!',
  }
});

// 狀態 data
// 型態 物件
const vm = new Vue({
  el: 'app',
  data:{
    x: 1,
    y: 2,
  }
});

or
const data = {
  x:1,
  y:2,
}
const vm = new Vue({
  el: 'app',
  data,
});
// usage
vm.x; // 1
vm.x = 3; // 3

// 方法 methods
// 型態 物件裡頭放函式
<div id="app">
  <h1>{{count}}</h1>
  <button v-on:click="add">+1</button>
</div>

const vm = new Vue({
  el: '#app',
  data:{
    count:0,
    step:1,
  },
  methods:{
    add(){
      this.count += 1;
    },
  }
})

// 計算屬性 Computed
// 設定的屬性無法和data衝突命名

// ex index-computed.html
// 深入學習參考文章
// https://cythilya.github.io/2017/04/15/vue-computed/ 


// 偵聽器 watch
// 型態 物件，可以宣告函式
// watch命名時要跟data名字相同
// 能用computed就不要用watch
// 深入學習參考文章
// https://cythilya.github.io/2017/04/15/vue-watch/



// 生命週期 life cycle
全部的生命週期掛鉤依序如下 (請參照清單下的圖)：
  beforeCreate：實體初始化。
  Created：實體建立完成。資料 $data 已可取得，但 $el 屬性還未被建立。
  beforeMount：執行元素掛載之前。
  mounted：元素已掛載， $el 被建立。
  beforeUpdate：當資料變化時被呼叫，還不會描繪 View。
  updated：DOM 的更新已經完成，View 被顯示在畫面上。
  activated：如果有設定 keep-alive，這個掛鉤會被呼叫。
  deactivated：停用 keep-alive時被呼叫。
  beforeDestroy：實體還可使用。
  destroyed：實體銷毀。所有綁定被解除、事件偵聽被移除、子實體也被銷毀。
